В Java константу (final поле) можно инициализировать несколькими способами. 

public class A {
    public final int a;
}

Все возможные варианты инициализации поля a:

1. Инициализация при объявлении поля

Вы можете присвоить значение непосредственно при объявлении поля:

public class A {
    public final int a = 10;
}


2. Инициализация в конструкторе

Кажный конструктор класса должен инициализировать final поле. Если есть несколько конструкторов, то во всех них должно присутствовать присвоение значения.
public class A {
    public final int a;

    // Конструктор без параметров
    public A() {
        this.a = 10;
    }

    // Конструктор с параметром
    public A(int value) {
        this.a = value;
    }
}


3. Инициализация в блоке инициализации

Вы можете использовать инициализационный блок для присвоения значения final полю. Этот блок выполняется перед выполнением конструктора.

public class A {
    public final int a;

    // Инициализационный блок
    {
        a = 10;
    }

    // Конструктор (может быть пустым или содержать другие действия)
    public A() {
        // Дополнительная инициализация, если необходимо
    }
}


### 4. Инициализация через геттер с ленивой инициализацией (не рекомендуется для final полей)

Хотя это не стандартный способ для final полей и может нарушить контракт final, в некоторых случаях можно использовать ленивую инициализацию. Однако этот подход требует осторожности и обычно не рекомендуется для final полей.

public class A {
    private final Integer a;

    public A() {
        this.a = initializeA();
    }

    private Integer initializeA() {
        return 10;
    }

    public int getA() {
        return a;
    }
}


Важные замечания:

- Неизменяемость: После инициализации, значение final поля не может быть изменено.
- Обязательность инициализации: Если вы не инициализируете final поле при объявлении, вы обязаны инициализировать его во всех конструкторах или в инициализационных блоках.
- Статические final поля: Для static final полей используется статический инициализационный блок.

Каждый из перечисленных способов обеспечивает корректную инициализацию final поля a в классе A.

---
Пример всех вариантов в одном классе:

public class A {
    // Вариант 1: Инициализация при объявлении
    public final int a1 = 10;
    
    // Вариант 3: Инициализация в блоке инициализации
    public final int a2;
    {
        a2 = 20;
    }
    
    // Вариант 2: Инициализация в конструкторе
    public final int a3;
    
    public A() {
        this.a3 = 30;
    }
    
    public A(int value) {
        this.a3 = value;
    }
}


В данном примере показаны все три способа инициализации final полей: при объявлении, в блоке инициализации и в конструкторе.

Инициализировать final поле a четырьмя основными способами:

1. Присвоение значения сразу при объявлении поля.
2. Присвоение значения в каждом конструкторе класса.
3. Присвоение значения в блоке инициализации.
4. (Менее распространённый) Использование ленивой инициализации через методы, но это требует осторожности и не рекомендуется для final полей.
