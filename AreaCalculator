//Принцип подстановки Лисков (Liskov Substitution Principle, LSP) 
//— это один из SOLID принципов объектно-ориентированного проектирования, 
//который гласит, что объекты подклассов должны быть заменяемы объектами 
//базового класса без изменения корректности программы.

// Базовый класс
abstract class Shape {
    abstract double area();
}

// Класс Rectangle, который реализует абстрактный метод area
class Rectangle extends Shape {
    private double width;
    private double height;

    public Rectangle(double width, double height) {
        this.width = width;
        this.height = height;
    }

    @Override
    double area() {
        return width * height;
    }
}

// Класс Square, который наследует Rectangle
class Square extends Rectangle {
    public Square(double sideLength) {
        super(sideLength, sideLength); // Вызываем конструктор Rectangle с одинаковыми сторонами
    }
}

// Класс для работы с фигурами
public class AreaCalculator {
    public static void printArea(Shape shape) {
        System.out.println("Area: " + shape.area());
    }

    public static void main(String[] args) {
        Shape rectangle = new Rectangle(5, 10);
        printArea(rectangle); // Area: 50.0

        Shape square = new Square(5);
        printArea(square); // Area: 25.0
    }
}
