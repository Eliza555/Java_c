рактика #2
Приведите примеры кода, в которых генерируются и обрабатываются следующие исключения

1. `ArithmeticException`

public class ArithmeticExceptionExample {
    public static void main(String[] args) {
        int a = 10;
        int b = 0;
        int result = a / b; // Деление на ноль вызывает ArithmeticException
        System.out.println("Результат: " + result);
    }
}

public class ArithmeticExceptionHandling {
    public static void main(String[] args) {
        try {
            int a = 10;
            int b = 0;
            int result = a / b; // Попытка деления на ноль
            System.out.println("Результат: " + result);
        } catch (ArithmeticException e) {
            System.out.println("Ошибка арифметической операции: " + e.getMessage());
        } finally {
            System.out.println("Блок finally выполнен.");
        }
    }
}


Вывод:

Ошибка арифметической операции: / by zero
Блок finally выполнен.


2. `ArrayIndexOutOfBoundsException`

public class ArrayIndexOutOfBoundsExceptionExample {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3};
        int invalidIndex = 5;
        System.out.println(numbers[invalidIndex]); // Обращение к несуществующему индексу
    }
}
public class ArrayIndexOutOfBoundsExceptionHandling {
    public static void main(String[] args) {
        try {
            int[] numbers = {1, 2, 3};
            int invalidIndex = 5;
            System.out.println("Элемент: " + numbers[invalidIndex]);
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Ошибка доступа к массиву: " + e.getMessage());
        } finally {
            System.out.println("Блок finally выполнен.");
        }
    }
}
Вывод:
Ошибка доступа к массиву: Index 5 out of bounds for length 3
Блок finally выполнен.

3. `IllegalArgumentException`

public class IllegalArgumentExceptionExample {
    public static void setAge(int age) {
        if (age < 0) {
            throw new IllegalArgumentException("Возраст не может быть отрицательным.");
        }
        System.out.println("Возраст установлен: " + age);
    }

    public static void main(String[] args) {
        setAge(-5); // Передача недопустимого аргумента
    }
}

public class IllegalArgumentExceptionHandling {
    public
static void setAge(int age) {
        if (age < 0) {
            throw new IllegalArgumentException("Возраст не может быть отрицательным.");
        }
        System.out.println("Возраст установлен: " + age);
    }

    public static void main(String[] args) {
        try {
            setAge(-5); // Попытка установить отрицательный возраст
        } catch (IllegalArgumentException e) {
            System.out.println("Ошибка аргумента: " + e.getMessage());
        } finally {
            System.out.println("Блок finally выполнен.");
        }
    }
}

Вывод:

Ошибка аргумента: Возраст не может быть отрицательным.
Блок finally выполнен.


4. `ClassCastException`

public class ClassCastExceptionExample {
    public static void main(String[] args) {
        Object obj = "Это строка";
        Integer num = (Integer) obj; // Неверное приведение типа вызывает ClassCastException
        System.out.println("Число: " + num);
    }
}

public class ClassCastExceptionHandling {
    public static void main(String[] args) {
        try {
            Object obj = "Это строка";
            Integer num = (Integer) obj; // Попытка неверного приведения типа
            System.out.println("Число: " + num);
        } catch (ClassCastException e) {
            System.out.println("Ошибка приведения типа: " + e.getMessage());
        } finally {
            System.out.println("Блок finally выполнен.");
        }
    }
}

Вывод:

Ошибка приведения типа: java.lang.String cannot be cast to java.lang.Integer
Блок finally выполнен.

#### 5. `NullPointerException`

public class NullPointerExceptionExample {
    public static void main(String[] args) {
        String str = null;
        System.out.println(str.length()); // Вызов метода на null объекте вызывает NullPointerException
    }
}
public class NullPointerExceptionHandling {
    public static void main(String[] args) {
        try {
            String str = null;
            System.out.println("Длина строки: " + str.length());
        } catch (NullPointerException e) {
            System.out.println("Ошибка: обращение к null объекту.");
        } finally {
            System.out.println("Блок finally выполнен.");
        }
    }
}

Вывод:
Ошибка: обращение к null объекту.
Блок finally выполнен.
